#include <iostream>
using namespace std;
struct Nodes{
    int priority, data;
    Nodes* link;
};

Nodes* front = NULL;

void enqueue(int, int);
void dequeue();
void display();
void peek();
void size();
void search(int);

int main(){
    enqueue(1,4);
    enqueue(10,1);
    enqueue(5,2);
    enqueue(22,5);
    enqueue(30,3);
    display();
    search(10);
    dequeue();
    display();
    peek();
    size();
    return 0;
}

void enqueue(int value, int prty){
    Nodes* temp = (Nodes*)malloc(sizeof(Nodes));
    temp->data = value;
    temp->priority = prty;

    if(front == NULL || prty <= front->priority){
        temp->link = front;
        front = temp;
    }
    else{
        Nodes* ptr = front;
        while(ptr->link != NULL && ptr->link->priority <= prty){
            ptr = ptr->link;
        }
        temp->link = ptr->link;
        ptr->link = temp;
    }
}

void dequeue(){
    Nodes* temp = front;
    int info;

    if(front !=  NULL){
        info = front->data;
        front = front->link;
        free(temp);
    }
    cout<<"You have dequeued: "<<info<<endl;
}

void display(){
    Nodes* temp = front;
    if(front != NULL){
        cout<<"  Queue contains: "<<endl;
        cout<<"  Priority  \tValue"<<endl;
        while(temp != NULL){
            cout<<"\t"<<temp->priority<<"\t"<<temp->data<<endl;
            temp = temp->link;
        }
        cout<<endl;
    }

    else cout<<"Queue underflow!"<<endl;
}
void peek(){
    Nodes* temp = front;
    if(temp != NULL){
        cout<<"Top value is: "<<front->data<<endl;
    }
    else cout<<"Queue underflow!"<<endl;
}

void size(){
    Nodes* temp = front;
    int cnt = 0;
    if(front != NULL){
        while(temp !=  NULL){
            cnt++;
            temp = temp->link;
        }
    }
    cout<<"Size of the Queue is: "<<cnt<<endl;
}

void search(int x){
    Nodes* temp = front;
    bool found = false;
    if(front != NULL){
        while(temp != NULL){
            if(temp->data == x)found=true;
            temp = temp->link;
        }
    }
    if(found)cout<<x<<" is found!"<<endl;
    else cout<<x<<" is not found!"<<endl;
}
